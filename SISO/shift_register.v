// File: shift_register.v
// Generated by MyHDL 0.11.46
// Date: Fri Jun 14 12:46:31 2024


`timescale 1ns/10ps

module shift_register (
    clk,
    reset,
    load,
    enable,
    data_in,
    shift_reg,
    serial_out,
    serial_in
);
// 8-bit shift register with load and enable functionality.
// 
// Parameters:
// clk -- Clock signal
// reset -- Active high reset signal
// load -- Load signal to load data into shift register
// enable -- Enable signal to shift data
// data_in -- 8-bit parallel data input
// serial_out -- Serial data output

input clk;
input reset;
input load;
input enable;
input [7:0] data_in;
output [7:0] shift_reg;
reg [7:0] shift_reg;
output serial_out;
wire serial_out;
input serial_in;




always @(posedge clk, posedge reset) begin: SHIFT_REGISTER_SEQ_LOGIC
    if (reset == 1) begin
        shift_reg <= 0;
    end
    else begin
        if (clk) begin
            if (reset) begin
                shift_reg <= 8'h0;
            end
            else begin
                if (load) begin
                    shift_reg <= data_in;
                end
                if (enable) begin
                    shift_reg <= ((shift_reg[7-1:1] << 1) | serial_in);
                end
                else begin
                    shift_reg <= shift_reg;
                end
            end
        end
    end
end



assign serial_out = shift_reg[0];

endmodule
